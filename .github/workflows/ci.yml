# Copyright (c) 2017-2020 Martin Donath <martin.donath@squidfunk.com>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

name: ci
on:
  - push
  - pull_request

# Jobs to run
jobs:

  # Build theme
  build:
    runs-on: ubuntu-latest
    steps:

      # Limit clone depth to speed up build
      - uses: actions/checkout@v1
        with:
          fetch-depth: 5

      # Install Node runtime and dependencies
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - uses: actions/cache@v1
        id: cache-node
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm install

      # Run linter and build distribution files
      - run: npm run lint
      - run: npm run build
      - run: google-chrome --version
      # - run: npm run test
      #   env:
      #     SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      #     SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

      # Upload coverage report to codecov.io
      # - run: |
      #     npm install codecov
      #     npx codecov
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Publish Python package and Docker image
  publish:
    if: |
      github.repository == 'squidfunk/karma-viewport' &&
      startsWith(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
    steps:

      # Limit clone depth to speed up build
      - uses: actions/checkout@v1
        with:
          fetch-depth: 5

      # Install Node runtime and dependencies
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
          registry-url: https://registry.npmjs.org

      - uses: actions/cache@v1
        id: cache-node
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm install

      # Run build and publish to NPM
      - run: npm run build
      - env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
